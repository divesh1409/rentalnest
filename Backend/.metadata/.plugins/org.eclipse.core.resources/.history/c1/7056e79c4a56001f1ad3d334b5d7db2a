package com.app.services;

package com.app.services;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.app.dto.ApplicationDTO;
import com.app.entity.Application;
import com.app.entity.Property;
import com.app.entity.User;
import com.app.repository.ApplicationRepository;
import com.app.repository.PropertyRepository;
import com.app.repository.UserRepository;

@Service
public class ApplicationServiceImpl implements ApplicationService {

    @Autowired
    private ApplicationRepository applicationRepository;

    @Autowired
    private PropertyRepository propertyRepository;

    @Autowired
    private UserRepository userRepository;

    @Override
    @Transactional
    public ApplicationDTO createApplication(ApplicationDTO applicationDTO) {
        Application application = new Application();
        application.setApplicationDate(applicationDTO.getApplicationDate());
        application.setStatus(applicationDTO.getStatus());

        Optional<Property> property = propertyRepository.findById(applicationDTO.getPropertyID());
        property.ifPresent(application::setProperty);

        Optional<User> tenant = userRepository.findById(applicationDTO.getTenantID());
        tenant.ifPresent(application::setTenant);

        application = applicationRepository.save(application);
        return convertToDTO(application);
    }

    @Override
    @Transactional
    public ApplicationDTO updateApplication(Long applicationId, ApplicationDTO applicationDTO) {
       
